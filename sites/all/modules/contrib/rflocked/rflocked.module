<?php
/**
 * Implements hook_permission().
 */
function rflocked_permission() {
  return array(
    'administer rflocked' =>  array(
      'title' => t('Administer rflocked'),
      'description' => t('Perform administration tasks for rflocked.'),
    ),
     
  );
}

/**
 * Implements hook_menu().
 */
function rflocked_menu() {
  $items = array();
  $items['admin/config/development/rflocked'] = array(
    'title' => 'Rename Locked Fields',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rflocked_admin_settings_form'),
    'access arguments' => array('administer rflocked'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Function to provide the administration settings form.
 */
function rflocked_admin_settings_form($form, $form_state) {
  $form['fields'] = array(
    '#type' => 'fieldset',
    '#title' => t('Fields'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#tree' => TRUE,
  );
  $fields = db_query('SELECT fci.field_id AS field_id, fci.field_name AS field_name, fci.entity_type AS entity_type, fci.bundle AS bundle FROM {field_config_instance} fci LEFT JOIN {field_config} fc ON fci.field_id = fc.id WHERE fc.locked = 1');
  foreach($fields as $field) {
    $instance = field_read_instance($field->entity_type, $field->field_name, $field->bundle);
    $fapi_id = check_plain("{$field->entity_type}---{$field->field_name}---{$field->bundle}");
    $fapi_id_title = check_plain("EntityType: {$field->entity_type} | EntityBundle: {$field->bundle} | FieldName: {$field->field_name}");
    $form['fields'][$fapi_id] = array(
      '#type' => 'textfield',
      '#title' => $fapi_id_title,
      '#default_value' => $instance['label'],
    );
  }
  $form['actions'] = array(
    '#type' => 'actions',
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Rename fields'),
    ),
  );
  return $form;
}

/**
 * Validation callback for the administration settings form.
 */
function rflocked_admin_settings_form_validate($form, $form_state) {
  if(empty($form_state['values']['fields'])) {
    form_set_error('fields', t('No locked fields seem to exist in your installation.'));
  }
}

/**
 * Submit callback for the administration settings form.
 */
function rflocked_admin_settings_form_submit($form, $form_state) {
  $instances = 0;
  foreach($form_state['values']['fields'] as $fapi_id => $label) {
    // Retrieve the instance of the configured field.
    $elements = explode('---', $fapi_id);
    $entity_type = $elements[0];
    $field_name = $elements[1];
    $bundle = $elements[2];
    $instance = field_read_instance($entity_type, $field_name, $bundle);
    $instance['label'] = check_plain($label);
    field_update_instance($instance);
    $instances++;
  }
  drupal_set_message(format_plural($instances, '1 field instance was updated.', '@count field instances were updated'));
}